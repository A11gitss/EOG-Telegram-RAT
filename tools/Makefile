# Makefile –¥–ª—è Eye Remote Admin Bot
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME = eye
VERSION = 1.0.0
BUILD_DIR = builds
PORTABLE_DIR = portable
CROSS_DIR = cross-builds

# –¶–µ–ª–∏ Windows
WINDOWS_TARGETS = x86_64-pc-windows-msvc i686-pc-windows-msvc x86_64-pc-windows-gnu i686-pc-windows-gnu

# –¶–µ–ª–∏ Linux  
LINUX_TARGETS = x86_64-unknown-linux-gnu i686-unknown-linux-gnu aarch64-unknown-linux-gnu

# –¶–µ–ª–∏ macOS
MACOS_TARGETS = x86_64-apple-darwin aarch64-apple-darwin

.PHONY: all clean help install-targets windows linux macos portable cross

# –ü–æ–º–æ—â—å
help:
	@echo "=== Eye Remote Admin Bot Build System ==="
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make build          - –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ (—Ç–µ–∫—É—â–∞—è —Å–∏—Å—Ç–µ–º–∞)"
	@echo "  make windows        - –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö Windows –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä"
	@echo "  make linux          - –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö Linux –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä (—Ç—Ä–µ–±—É–µ—Ç cross)"
	@echo "  make macos          - –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö macOS –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä"
	@echo "  make portable       - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏"
	@echo "  make cross          - –ö—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞"
	@echo "  make all            - –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º"
	@echo "  make clean          - –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏"
	@echo "  make install-targets- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä"
	@echo "  make help           - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
	@echo ""

# –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞
build:
	@echo "üî® –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞..."
	cargo build --release
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: target/release/$(PROJECT_NAME).exe"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä
install-targets:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–≤—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä..."
	@for target in $(WINDOWS_TARGETS) $(LINUX_TARGETS) $(MACOS_TARGETS); do \
		echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $$target..."; \
		rustup target add $$target; \
	done
	@echo "‚úÖ –í—Å–µ —Ü–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–±–æ—Ä–∫–∏
$(BUILD_DIR):
	@mkdir -p $(BUILD_DIR)

$(PORTABLE_DIR):
	@mkdir -p $(PORTABLE_DIR)

$(CROSS_DIR):
	@mkdir -p $(CROSS_DIR)

# –°–±–æ—Ä–∫–∞ –¥–ª—è Windows
windows: $(BUILD_DIR)
	@echo "üè¢ –°–±–æ—Ä–∫–∞ –¥–ª—è Windows –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä..."
	@for target in $(WINDOWS_TARGETS); do \
		echo "–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –¥–ª—è $$target..."; \
		rustup target add $$target 2>/dev/null || true; \
		cargo build --release --target $$target; \
		if [ $$? -eq 0 ]; then \
			arch_dir="$(BUILD_DIR)/$$(echo $$target | sed 's/pc-windows//' | sed 's/-msvc//' | sed 's/-gnu/-gnu/' | sed 's/x86_64/x64/' | sed 's/i686/x86/')"; \
			mkdir -p "$$arch_dir"; \
			cp "target/$$target/release/$(PROJECT_NAME).exe" "$$arch_dir/"; \
			echo "‚úÖ $$target - –≥–æ—Ç–æ–≤–æ!"; \
		else \
			echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –¥–ª—è $$target"; \
		fi; \
	done

# –°–±–æ—Ä–∫–∞ –¥–ª—è Linux (—Ç—Ä–µ–±—É–µ—Ç cross)
linux: $(CROSS_DIR)
	@echo "üêß –°–±–æ—Ä–∫–∞ –¥–ª—è Linux –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä..."
	@which cross >/dev/null 2>&1 || (echo "‚ùå cross –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cargo install cross" && exit 1)
	@for target in $(LINUX_TARGETS); do \
		echo "–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –¥–ª—è $$target..."; \
		cross build --release --target $$target; \
		if [ $$? -eq 0 ]; then \
			arch_dir="$(CROSS_DIR)/$$(echo $$target | sed 's/unknown-linux-gnu//' | sed 's/-unknown//' | sed 's/x86_64/x64/' | sed 's/i686/x86/' | sed 's/aarch64/arm64/')"; \
			mkdir -p "$$arch_dir"; \
			cp "target/$$target/release/$(PROJECT_NAME)" "$$arch_dir/"; \
			echo "‚úÖ $$target - –≥–æ—Ç–æ–≤–æ!"; \
		else \
			echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –¥–ª—è $$target"; \
		fi; \
	done

# –°–±–æ—Ä–∫–∞ –¥–ª—è macOS
macos: $(CROSS_DIR)
	@echo "üçé –°–±–æ—Ä–∫–∞ –¥–ª—è macOS –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä..."
	@for target in $(MACOS_TARGETS); do \
		echo "–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –¥–ª—è $$target..."; \
		rustup target add $$target 2>/dev/null || true; \
		cargo build --release --target $$target; \
		if [ $$? -eq 0 ]; then \
			arch_dir="$(CROSS_DIR)/$$(echo $$target | sed 's/apple-darwin//' | sed 's/-apple//' | sed 's/x86_64/macos-x64/' | sed 's/aarch64/macos-arm64/')"; \
			mkdir -p "$$arch_dir"; \
			cp "target/$$target/release/$(PROJECT_NAME)" "$$arch_dir/"; \
			echo "‚úÖ $$target - –≥–æ—Ç–æ–≤–æ!"; \
		else \
			echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –¥–ª—è $$target"; \
		fi; \
	done

# –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è
portable: $(PORTABLE_DIR)
	@echo "üì± –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏..."
	@rustup target add x86_64-pc-windows-msvc 2>/dev/null || true
	@export RUSTFLAGS="-C target-cpu=native -C link-arg=-s" && \
	cargo build --release --target x86_64-pc-windows-msvc
	@if [ $$? -eq 0 ]; then \
		cp "target/x86_64-pc-windows-msvc/release/$(PROJECT_NAME).exe" "$(PORTABLE_DIR)/EyeRemoteAdmin.exe"; \
		echo "‚úÖ –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞!"; \
		echo "üìÅ –ü–∞–ø–∫–∞: $(PORTABLE_DIR)"; \
	else \
		echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏"; \
	fi

# –ö—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞
cross: windows linux macos
	@echo "üåê –ö—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
all: install-targets cross portable
	@echo "üéâ –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo ""
	@echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏:"
	@find $(BUILD_DIR) $(CROSS_DIR) $(PORTABLE_DIR) -name "$(PROJECT_NAME)*" -type f 2>/dev/null | while read file; do \
		size=$$(du -h "$$file" | cut -f1); \
		echo "   $$file - $$size"; \
	done

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏..."
	cargo clean
	rm -rf $(BUILD_DIR) $(PORTABLE_DIR) $(CROSS_DIR)
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
check:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	cargo check --all-targets
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	cargo test
	@echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
fmt:
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	cargo fmt
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –õ–∏–Ω—Ç–∏–Ω–≥
lint:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞..."
	cargo clippy -- -D warnings
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
info:
	@echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ ==="
	@echo "–ù–∞–∑–≤–∞–Ω–∏–µ: $(PROJECT_NAME)"
	@echo "–í–µ—Ä—Å–∏—è: $(VERSION)"
	@echo "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:"
	@echo "  Windows: $(WINDOWS_TARGETS)"
	@echo "  Linux: $(LINUX_TARGETS)"
	@echo "  macOS: $(MACOS_TARGETS)"
	@echo ""
	@echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ü–µ–ª–∏ Rust:"
	@rustup target list --installed
	@echo ""
	@echo "–í–µ—Ä—Å–∏—è Rust:"
	@rustc --version